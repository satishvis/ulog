#!/usr/bin/env bash

# Ulog - A Shell wrapper for Ultimate Time Tracker App
# Copyright Â© 2022 Satish Viswanathan Iyer

# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
# OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.


if  ! command -v gum &> /dev/null
then 
    echo "You need to install 'charmbracelet/gum' to run this ... Exiting"
    exit 1
fi

version=0.0.1
sep=" "



utt=$HOME/.local/bin/utt
EDITOR=/usr/bin/nvim
header(){
    gum style --foreground 202 --border double --border-foreground 202 --padding "1 1" --margin 1 --width 40 --align center "$(gum style --foreground 255 $(gum join 'Uttlog:' $(echo \($version\))))" "$(gum style --foreground 255 'A Ultimate Time Tracker Log')"
}

message(){
    gum style --foreground 202 "$1" 
}

pressakey() {
    gum confirm --selected.foreground 0 --selected.background 202 --affirmative  "Yes"  --negative "" "Shall We $(gum style --foreground 255 'Continue?')'"
}

TOPREPORTS=(\
    "Add Log Entry" \
    "Stretch Entry" \
    "See Today Report" \
    "Add Break Entry" \
    "Add Ignored Activity" \
    "Add Log Entry With Comments" \
    "See Yesterday Report" \
    "Other Reports[Sub Menu]" \
    "See Full Log File" \
    "Edit Log File" \
    "Show Help" \
    "Quit/Exit" \
)
printf -v topjoin '%s\n' "${TOPREPORTS[@]}"

WEEKDAYS=(\
    "Monday" \
    "Tuesday" \
    "Wednesday" \
    "Thursday" \
    "Friday" \
    "Saturday" \
    "Sunday"\
) 

REPORTS=(\
    "DOW" \
    "Since-DOW" \
    "From-To Date" \
    "Custom Report" \
    "Report Help" \
)

show_reports() {
    echo "use j/k or arrow keys to move up/down"
    RCHOICE=$(gum choose --cursor.foreground 202 "${REPORTS[@]}")
    case $RCHOICE in
        "DOW")
            DOW=$(gum choose --cursor.foreground 202 "${WEEKDAYS[@]}")
            sh -c "$utt report $DOW"
            ;;

        "Since-DOW")
            DOW=$(gum choose --cursor.foreground 202 "${WEEKDAYS[@]}")
            sh -c "$utt report --from $DOW"
            ;;

        "Custom Report")
            sh -c "utt report --from"
            message "The Error is deliberate... Craft your command here..."
            CUSTOM=$(gum write --header "Custom Report: " --placeholder "Type the full custom command: utt report --from <date> --to <date>.... Press <C-d> to end")
            sh -c "$CUSTOM"
            ;;

        "Report Help")
            sh -c "utt report --help" | gum pager --border-foreground 202 --help.foreground 202 
            ;;

        "From-To Date")
            FROM=$(gum input --prompt "FROM: " --placeholder "Report's from date")
            test -z "$FROM" && echo "From: is mandatory..." && return
            TO=$(gum input --prompt "${FROM} TO: " --placeholder "Report's to date")
            test -n "$TO" && \
                sh -c "$utt report --from $FROM --to $TO" || \
                sh -c "$utt report --from $FROM"
            ;;

        *)
            message "Return to Main menu..."
            return
            ;;
    esac
}

while :
do
    clear
    header
    # Use this if you want normal Menu and not fuzzy one
    # CHOICE=$(gum choose "${TOPREPORTS[@]}")
    CHOICE=$(echo "$topjoin" | gum filter --indicator ">" --indicator.foreground 202 --match.foreground 202 --placeholder "Fuzzy search here..." --prompt "Fuzzy Main Menu: " --prompt.foreground 255 --height 12)
    case $CHOICE in 
        "Add Log Entry")
            PROJECT=$(gum input --prompt "Project: " --prompt.foreground 202 --placeholder "Which Project you were working on? ")
            test -n "$PROJECT" && PROMPT="$PROJECT: "
            DESC=$(gum input --prompt "$(gum style --foreground 202 ${PROMPT})Description: " --placeholder "Explain what you did in about 10-15 words...")
            test -n "$PROJECT" && ENTRY="$PROJECT: "
            test -n "$DESC" && ENTRY="$ENTRY$DESC"
            test -n "$ENTRY" && sh -c "$utt add \"$ENTRY\"" && gum spin --spinner.foreground 202 -s minidot --title "Log written ..." -- sleep 1 || gum spin --spinner.foreground 202 -s monkey --title "No input provided ..." -- sleep 2
            ;;

        "Stretch Entry")
            sh -c "$utt stretch"
            ;;

        "Add Ignored Activity")
            DESC=$(gum input --prompt "$(gum style --foreground 202 )Description: " --placeholder "Explain what you did in about 10-15 words... Don't add *s")
            test -n "$DESC" && ENTRY="$DESC ***"
            test -n "$ENTRY" && sh -c "$utt add \"$ENTRY\"" && gum spin --spinner.foreground 202 -s minidot --title "Log written ..." -- sleep 1 || gum spin --spinner.foreground 202 -s monkey --title "No input provided ..." -- sleep 2
            ;;

        "Add Break Entry")
            DESC=$(gum input --prompt "$(gum style --foreground 202 )Description: " --placeholder "Explain what you did in about 10-15 words... Don't add *s")
            test -n "$DESC" && ENTRY="$DESC **"
            test -n "$ENTRY" && sh -c "$utt add \"$ENTRY\"" && gum spin --spinner.foreground 202 -s minidot --title "Log written ..." -- sleep 1 || gum spin --spinner.foreground 202 -s monkey --title "No input provided ..." -- sleep 2
            ;;

        "Add Log Entry With Comments")
            PROJECT=$(gum input --prompt "Project: " --prompt.foreground 202 --placeholder "Which Project you were working on? ")
            test -n "$PROJECT" && PROMPT="$PROJECT: "
            DESC=$(gum input --prompt "$(gum style --foreground 202 ${PROMPT})Description: " --placeholder "Explain what you did in about 10-15 words...")
            test -n "$PROJECT" && ENTRY="$PROJECT: "
            test -n "$DESC" && ENTRY="$ENTRY$DESC"
            COMMENTS=$(gum write --header "Comments/Annotations" --placeholder "Write your comments here (Ctrl-D) to exit")
            test -n "$ENTRY" && sh -c "$utt add -c \"$COMMENTS\" \"$ENTRY\"" && gum spin --spinner.foreground 202 -s minidot --title "Log written ..." -- sleep 1 || gum spin --spinner.foreground 202 -s monkey --title "No input provided ..." -- sleep 2
            ;;

        "See Today Report")
            sh -c "$utt report"
            pressakey 
            ;;

        "See Yesterday Report")
            sh -c "$utt report yesterday"
            pressakey 
            ;;

        "Edit Log File")
            sh -c "$EDITOR $HOME/.local/share/utt/utt.log"

            ;;

        "Other Reports[Sub Menu]")
            show_reports
            pressakey 
            ;;

        "See Full Log File")
            # This is hardcoded... 
            gum pager < "$HOME"/.local/share/utt/utt.log --border-foreground 202 --help.foreground 202
            ;;
        "Show Help")
            sh -c "$utt --help"
            pressakey 
            ;;

        "Quit/Exit")
            message "Thanks for using Ulog ..."; sleep 1 
            break
            ;;

        *)
            continue
            ;;
    esac
done
clear
